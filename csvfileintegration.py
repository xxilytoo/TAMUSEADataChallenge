# -*- coding: utf-8 -*-
"""CSVFileIntegration.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LXal-fj7vHyuAl2AIBv6lNlnKDUzZc8c
"""

import torch
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

import warnings
warnings.filterwarnings('ignore')

device = "cuda" if torch.cuda.is_available() else "cpu"
print(f"{device}" " is available.")

dL = pd.read_csv("/content/data/L.csv")

dL.head()

!pip install geohash2

import geohash2
latitude = 40.7128
longitude = -74.0060
precision = 7

geohash = geohash2.encode(latitude, longitude, precision)
print("Geohash:", geohash)

dMean = pd.read_csv("/content/data/Mfilc.csv")
dMean = dMean.drop(dMean.columns[0], axis=1)
melted_df = pd.melt(dMean)
melted_df = melted_df.drop(melted_df.columns[0], axis=1)
melted_df.head()

dT = pd.read_csv("/content/data/t.csv")
dT = dT.drop(dT.columns[0], axis=1)
rep = len(melted_df)//len(dT)
rep_dT = pd.concat([dT] * rep, ignore_index=True)
remain = len(melted_df)%len(dT)
if remain > 0:
  rep_dT = pd.concat([rep_dT, dT.iloc[:remain]], ignore_index=True)
combined_df = pd.concat([rep_dT,melted_df], axis=1)
combined_df.head()

lon = 0
lat = 0
store_df = pd.DataFrame(columns=['Location Hashed'])
for index,row in dL.iterrows():
  lon = row[dL.columns[1]]
  lat = row[dL.columns[2]]
  val = geohash2.encode(lat,lon,9)
  rep_val = [val] * 1464
  new_df = pd.DataFrame(rep_val, columns=['Location Hashed'])
  store_df = pd.concat([store_df,new_df])
store_df.head()

store_df.reset_index(drop=True, inplace=True)
bot_df = pd.concat([rep_dT,store_df,melted_df], axis=1)
bot_df.head()

#Done with combining L, Mfilc, and t
#need to progress with MBSL, MGRD, MIBE, MRes
dMBSL = pd.read_csv("/content/data/MBSL.csv")
dMBSL = dMBSL.drop(dMBSL.columns[0], axis=1)
melted_dMBSL = pd.melt(dMBSL)
melted_dMBSL = melted_dMBSL.drop(melted_dMBSL.columns[0], axis=1)
melted_dMBSL.rename(columns={"value":"MBSL"},inplace=True)
melted_dMBSL.head()

#MGRD Processing
dMGRD = pd.read_csv("/content/data/MGRD.csv")
dMGRD = dMGRD.drop(dMGRD.columns[0], axis=1)
melted_dMGRD = pd.melt(dMGRD)
melted_dMGRD = melted_dMGRD.drop(melted_dMGRD.columns[0], axis=1)
melted_dMGRD.rename(columns={"value":"MGRD"}, inplace=True)
melted_dMGRD.head()

#MIBE Processing
dMIBE = pd.read_csv("/content/data/MIBE.csv")
dMIBE = dMIBE.drop(dMIBE.columns[0], axis=1)
melted_dMIBE = pd.melt(dMIBE)
melted_dMIBE = melted_dMIBE.drop(melted_dMIBE.columns[0], axis=1)
melted_dMIBE.rename(columns={"value":"MIBE"}, inplace = True)
melted_dMIBE.head()

#MRes Processing
dMRes = pd.read_csv("/content/data/MRes.csv")
dMRes = dMRes.drop(dMRes.columns[0], axis=1)
melted_dMRes = pd.melt(dMRes)
melted_dMRes = melted_dMRes.drop(melted_dMRes.columns[0], axis=1)
melted_dMRes.rename(columns={"value" : "MRes"}, inplace = True)
melted_dMRes.head()

final_df = pd.concat([rep_dT,store_df,melted_df, melted_dMBSL, melted_dMGRD, melted_dMIBE, melted_dMRes], axis=1)
final_df.head()

final_df.rename(columns={"0":"Time", "value":"Mean Sea Level Rise"}, inplace=True)
final_df.head()

final_df.to_csv("finaldata.csv", index=False)